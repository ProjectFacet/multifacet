# Generated by Django 3.0.3 on 2020-04-06 23:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('editorial', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('note', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsOrganizationNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='The identifying name of the network.', max_length=350)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('anchor_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Anchor')),
                ('entity_owner', models.ForeignKey(help_text='Entity that owns this network.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='network_owner', to='base.EntityOwner')),
                ('entity_owner_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('members', models.ManyToManyField(related_name='network_members', to='base.NetworkMember')),
                ('notes', models.ManyToManyField(blank=True, to='note.Note')),
                ('participant_owner', models.ForeignKey(help_text='Participant who owns this organization.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('partner_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Partner')),
                ('simple_audio_assets', models.ManyToManyField(blank=True, to='editorial.SimpleAudio')),
                ('simple_document_assets', models.ManyToManyField(blank=True, to='editorial.SimpleDocument')),
                ('simple_image_assets', models.ManyToManyField(blank=True, to='editorial.SimpleImage')),
                ('simple_video_assets', models.ManyToManyField(blank=True, to='editorial.SimpleVideo')),
            ],
            options={
                'verbose_name': 'News Organization Network',
                'verbose_name_plural': 'News Organization Networks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('website', models.URLField(blank=True, max_length=250)),
                ('active', models.BooleanField(default=True, help_text='Whether the news organization is in active operations.')),
                ('mission_statement', models.TextField(blank=True, help_text='Statement of mission and goals of the news organization.')),
                ('list_publicly', models.BooleanField(default=False, help_text='Whether the news organization is listed publicly in discovery.')),
                ('display_business_structure', models.BooleanField(default=False, help_text='Publicly display values for business_structure.')),
                ('business_structure', models.CharField(blank=True, choices=[('Nonprofit - 501C3', 'Nonprofit'), ('For profit', 'For profit'), ('B Corp', 'B Corporation'), ('Cooperative', 'Cooperative'), ('Direct Offering', 'Direct Offering'), ('Hybrid', 'Hybrid'), ('Employee Owned', 'Employee Owned'), ('Other', 'Other')], help_text='Business structure of the news organization.', max_length=50)),
                ('display_platforms', models.BooleanField(default=False, help_text='Publicly display values for platform_ options.')),
                ('platform_print', models.BooleanField(default=False, help_text='News Organization publishes in print.')),
                ('platform_online', models.BooleanField(default=False, help_text='News Organization publishes online.')),
                ('platform_social', models.BooleanField(default=False, help_text='News Organization publishes content on social platforms.')),
                ('platform_network_tv', models.BooleanField(default=False, help_text='News Organization airs on network television.')),
                ('platform_cable_tv', models.BooleanField(default=False, help_text='News Organization airs on cable television.')),
                ('platform_radio', models.BooleanField(default=False, help_text='News Organization airs on radio.')),
                ('platform_podcast', models.BooleanField(default=False, help_text='News Organization produces podcasts.')),
                ('platform_newsletter', models.BooleanField(default=False, help_text='News Organization publishes newsletters.')),
                ('platform_streaming_video', models.BooleanField(default=False, help_text='News Organization content airs on streaming video.')),
                ('display_audience', models.BooleanField(default=False, help_text='Publicly display values for audience.')),
                ('audience', models.CharField(blank=True, help_text='Description of primary audiences.', max_length=255)),
                ('display_ownership', models.BooleanField(default=False, help_text='Publicly display values for ownership.')),
                ('ownership', models.TextField(blank=True, help_text='What or who owns the news organization.')),
                ('display_business_model', models.BooleanField(default=False, help_text='Publicly display values for business_model.')),
                ('business_model', models.TextField(blank=True, help_text='What are the sources of support for the news organization.')),
                ('display_unionization', models.BooleanField(default=False, help_text='Publicly display values for unionization.')),
                ('unionization', models.CharField(blank=True, help_text='Is any part of the news organization workforce unionized.', max_length=255)),
                ('display_diversity', models.BooleanField(default=False, help_text='Publicly display values for diversity.')),
                ('diversity', models.TextField(blank=True, help_text='The makeup of the news organization and any programs or efforts to help ensure diversity in staffing.')),
                ('display_strengths', models.BooleanField(default=False, help_text='Publicly display values for strengths.')),
                ('strengths', models.TextField(blank=True, help_text='Any special skills or strengths this newsroom has.')),
                ('display_partner_qualities', models.BooleanField(default=False, help_text='Publicly display values for partner_qualities.')),
                ('partner_qualities', models.TextField(blank=True, help_text='What about this organization makes it a good collaborative partner.')),
                ('display_best_coverage', models.BooleanField(default=False, help_text='Publicly display values for best_coverage.')),
                ('best_coverage', models.TextField(blank=True, help_text='What coverage has this organization been involved in that the newsroom is proud of.')),
                ('display_collab_experience', models.BooleanField(default=False, help_text='Publicly display values for collab_experience.')),
                ('collab_experience', models.TextField(blank=True, help_text='Has the news organization collaborated before and how often.')),
                ('display_seeking_collabs', models.BooleanField(default=False, help_text='Publicly display values for seeking_collabs.')),
                ('seeking_collabs', models.BooleanField(default=False, help_text='Actively seeking collaborative projects to participate in.')),
                ('display_seeking_partners', models.BooleanField(default=False, help_text='Publicly display values for seeking_partners.')),
                ('seeking_partners', models.BooleanField(default=False, help_text='Actively seeking partners for a specific project.')),
                ('anchor_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Anchor')),
                ('entity_owner_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('network_member_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.NetworkMember')),
                ('notes', models.ManyToManyField(blank=True, to='note.Note')),
                ('participant_owner', models.ForeignKey(help_text='Participant who created/owns this organization.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('partner_profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Partner')),
                ('simple_audio_assets', models.ManyToManyField(blank=True, to='editorial.SimpleAudio')),
                ('simple_document_assets', models.ManyToManyField(blank=True, to='editorial.SimpleDocument')),
                ('simple_image_assets', models.ManyToManyField(blank=True, to='editorial.SimpleImage')),
                ('simple_video_assets', models.ManyToManyField(blank=True, to='editorial.SimpleVideo')),
            ],
            options={
                'verbose_name': 'News Organization',
                'verbose_name_plural': 'News Organizations',
            },
        ),
    ]
