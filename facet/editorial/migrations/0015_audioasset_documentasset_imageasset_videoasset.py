# Generated by Django 3.0.3 on 2020-11-27 01:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0005_auto_20200620_2012'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('editorial', '0014_auto_20201126_1312'),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Text for file name. Name it intuitively.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='What is the asset. (If a photo or graphic, it should be the caption.)', max_length=300)),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='When the asset was created.')),
                ('sensitive', models.BooleanField(default=False, help_text='Is the asset sensitive, or associated with sensitve content?')),
                ('original', models.BooleanField(default=True, help_text='This content originally belonged to this entity.')),
                ('attribution', models.TextField(blank=True, help_text='The appropriate information for crediting the asset.', max_length=200)),
                ('video', models.FileField(blank=True, upload_to='videos')),
                ('thumbnail', models.FileField(blank=True, upload_to='videos')),
                ('link', models.URLField(blank=True, help_text='Link to video file hosted elsewhere.', max_length=400)),
                ('asset_type', models.CharField(choices=[('MP4', 'mp4'), ('YOUTUBE', 'YouTube'), ('VIMEO', 'Vimeo')], help_text='The kind of video.', max_length=20)),
                ('file_type', models.CharField(help_text='The file extension', max_length=10)),
                ('file_size', models.DecimalField(decimal_places=2, help_text='Size of uploaded file.', max_digits=8)),
                ('entity_owner', models.ForeignKey(help_text='Entity that owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('participant_owner', models.ForeignKey(blank=True, help_text='Participant who created/owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Text for file name. Name it intuitively.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='What is the asset. (If a photo or graphic, it should be the caption.)', max_length=300)),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='When the asset was created.')),
                ('sensitive', models.BooleanField(default=False, help_text='Is the asset sensitive, or associated with sensitve content?')),
                ('original', models.BooleanField(default=True, help_text='This content originally belonged to this entity.')),
                ('attribution', models.TextField(blank=True, help_text='The appropriate information for crediting the asset.', max_length=200)),
                ('image', models.ImageField(blank=True, upload_to='photos')),
                ('asset_type', models.CharField(choices=[('PHOTO', 'Photograph'), ('GRAPHIC', 'Graphic or Illustration')], help_text='The kind of image.', max_length=20)),
                ('file_type', models.CharField(help_text='The file extension', max_length=10)),
                ('file_size', models.DecimalField(decimal_places=2, help_text='Size of uploaded file.', max_digits=8)),
                ('entity_owner', models.ForeignKey(help_text='Entity that owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('participant_owner', models.ForeignKey(blank=True, help_text='Participant who created/owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Text for file name. Name it intuitively.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='What is the asset. (If a photo or graphic, it should be the caption.)', max_length=300)),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='When the asset was created.')),
                ('sensitive', models.BooleanField(default=False, help_text='Is the asset sensitive, or associated with sensitve content?')),
                ('original', models.BooleanField(default=True, help_text='This content originally belonged to this entity.')),
                ('attribution', models.TextField(blank=True, help_text='The appropriate information for crediting the asset.', max_length=200)),
                ('document', models.FileField(blank=True, upload_to='documents')),
                ('asset_type', models.CharField(choices=[('PDF', 'Adobe PDF'), ('WORD DOC', 'Word Doc'), ('TEXT', 'Text File'), ('COMMA SEPARATED', 'Comma Separated'), ('EXCEL', 'Excel File'), ('OTHER', 'Other')], help_text='The kind of document.', max_length=20)),
                ('file_type', models.CharField(help_text='The file extension', max_length=10)),
                ('file_size', models.DecimalField(decimal_places=2, help_text='Size of uploaded file.', max_digits=8)),
                ('entity_owner', models.ForeignKey(help_text='Entity that owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('participant_owner', models.ForeignKey(blank=True, help_text='Participant who created/owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AudioAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Text for file name. Name it intuitively.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='What is the asset. (If a photo or graphic, it should be the caption.)', max_length=300)),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='When the asset was created.')),
                ('sensitive', models.BooleanField(default=False, help_text='Is the asset sensitive, or associated with sensitve content?')),
                ('original', models.BooleanField(default=True, help_text='This content originally belonged to this entity.')),
                ('attribution', models.TextField(blank=True, help_text='The appropriate information for crediting the asset.', max_length=200)),
                ('audio', models.FileField(blank=True, upload_to='audio')),
                ('link', models.URLField(blank=True, help_text='Link to audio file hosted elsewhere.', max_length=400)),
                ('asset_type', models.CharField(choices=[('MP3', 'mp3'), ('WAV', 'wav'), ('SC', 'SoundCloud')], help_text='The kind of audio.', max_length=20)),
                ('file_type', models.CharField(help_text='The file extension', max_length=10)),
                ('file_size', models.DecimalField(decimal_places=2, help_text='Size of uploaded file.', max_digits=8)),
                ('entity_owner', models.ForeignKey(help_text='Entity that owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.EntityOwner')),
                ('participant_owner', models.ForeignKey(blank=True, help_text='Participant who created/owns this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
